# EXAMPLE
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tailscale
  namespace: kube-system
  labels:
    app: tailscale
spec:
  selector:
    matchLabels:
      app: tailscale
  template:
    metadata:
      labels:
        app: tailscale
    spec:
      initContainers:
      - args:
        - sysctl -w net.ipv4.ip_forward=1 && if sysctl net.ipv6.conf.all.forwarding; then
          sysctl -w net.ipv6.conf.all.forwarding=1; fi
        command:
        - /bin/sh
        - -c
        image: tailscale/tailscale:v1.82.0
        imagePullPolicy: Always
        name: sysctler
        resources: {}
        securityContext:
          privileged: true
      # serviceAccountName: tailscale
      # this is to force the pod to run in host netNS
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      containers:
      - name: tailscale
        imagePullPolicy: Always
        image: "ghcr.io/tailscale/tailscale:latest"
        env:
        - name: TS_ROUTES
          value: "fdac:a172:3613::/108,2600:1f18:2abc:e500::/56"
        - name: TS_KUBE_SECRET
          value: ""
        - name: TS_USERSPACE
          value: "false"
        - name: TS_EXTRA_ARGS
          value: "--accept-routes --reset --advertise-tags=tag:subnet-router"
        - name: TS_STATE_DIR
          value: /tsstate
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale-auth
              key: TS_AUTHKEY
        - name: TS_ACCEPT_DNS
          value: "true"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - name: tailscale-state
          mountPath: /tsstate
        # - name: resolv
        #   mountPath: /etc/resolv.conf

      volumes:
      - name: tailscale-state
        emptyDir: {}
      # - name: resolv
      #   hostPath:
      #     path: /etc/resolv.conf
      #     type: File
