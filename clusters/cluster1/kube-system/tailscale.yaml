# EXAMPLE
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tailscale
  namespace: kube-system
  labels:
    app: tailscale
spec:
  selector:
    matchLabels:
      app: tailscale
  template:
    metadata:
      labels:
        app: tailscale
    spec:
      initContainers:
      - args:
        - sysctl -w net.ipv4.ip_forward=1 && if sysctl net.ipv6.conf.all.forwarding; then
          sysctl -w net.ipv6.conf.all.forwarding=1; fi
        command:
        - /bin/sh
        - -c
        image: tailscale/tailscale:v1.82.0
        imagePullPolicy: IfNotPresent
        name: sysctler
        resources: {}
        securityContext:
          privileged: true
      # serviceAccountName: tailscale
      # this is to force the pod to run in host netNS
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      containers:
      - name: tailscale
        imagePullPolicy: Always
        image: "ghcr.io/tailscale/tailscale:latest"
        env:
        # Store the state in a k8s secret
        - name: TS_KUBE_SECRET
          value: ""
        - name: TS_USERSPACE
          value: "false"
        - name: TS_EXTRA_ARGS
          value: "--accept-routes --reset"
        - name: TS_STATE_DIR
          value: /tsstate
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale-auth
              key: TS_AUTHKEY
        - name: TS_ACCEPT_DNS
          value: "true"
      - name: table-setup
        image: tailscale/tailscale:v1.82.0
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
          - |
            sleep 10
            sleep 10
            # Only add ip rules if they don't exist
            ip rule list | grep -q "to 100.64.0.0/10 lookup 52" || ip rule add to 100.64.0.0/10 lookup 52 pref 1100
            ip rule list | grep -q "fwmark 0x40000/0xff0000 lookup 52" || ip rule add fwmark 0x40000/0xff0000 lookup 52
            # Only add route if it doesn't exist
            ip route show table 52 | grep -q "100.64.0.0/10 dev tailscale0" || ip route add 100.64.0.0/10 dev tailscale0 table 52
            # Avoid duplicate iptables rules
            iptables -t mangle -C PREROUTING -d 100.64.0.0/10 -j MARK --set-mark 0x40000 2>/dev/null || iptables -t mangle -A PREROUTING -d 100.64.0.0/10 -j MARK --set-mark 0x40000
            iptables -t mangle -C OUTPUT -d 100.64.0.0/10 -j MARK --set-mark 0x40000 2>/dev/null || iptables -t mangle -A OUTPUT -d 100.64.0.0/10 -j MARK --set-mark 0x40000
            iptables -C FORWARD -s 192.168.0.0/16 -d 100.64.0.0/10 -o tailscale0 -j ACCEPT 2>/dev/null || iptables -A FORWARD -s 192.168.0.0/16 -d 100.64.0.0/10 -o tailscale0 -j ACCEPT
            iptables -t nat -C POSTROUTING -s 192.168.0.0/16 -d 100.64.0.0/10 -j MASQUERADE 2>/dev/null || iptables -t nat -A POSTROUTING -s 192.168.0.0/16 -d 100.64.0.0/10 -j MASQUERADE
            sleep infinity
        resources: {}
        securityContext:
          privileged: true
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - name: tailscale-state
          mountPath: /tsstate
        # - name: resolv
        #   mountPath: /etc/resolv.conf
      volumes:
      - name: tailscale-state
        emptyDir: {}
      # - name: resolv
      #   hostPath:
      #     path: /etc/resolv.conf
      #     type: File
